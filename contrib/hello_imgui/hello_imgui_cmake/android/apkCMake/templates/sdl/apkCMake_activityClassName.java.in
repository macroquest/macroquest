package @apkCMake_applicationIdUrlPart@.@apkCMake_applicationIdNamePart@;
import org.libsdl.app.SDLActivity;

/**
* A sample wrapper class that just calls SDLActivity
*/
public class @apkCMake_activityClassName@ extends SDLActivity
{
    /**
     * This method is called by SDL before loading the native shared libraries.
     * It can be overridden to provide names of shared libraries to be loaded.
     * The default implementation returns the defaults. It never returns null.
     * An array returned by a new implementation must at least contain "SDL2".
     * Also keep in mind that the order the libraries are loaded may matter.
     * @return names of shared libraries to be loaded (e.g. "SDL2", "main").
     */
    protected String[] getLibraries() {
        return new String[] {
            // "hidapi",
            "SDL2",
            // "SDL2_image",
            // "SDL2_mixer",
            // "SDL2_net",
            // "SDL2_ttf",
            "@apkCMake_appLibraryToEmbed@"
        };
    }

}

/*
This code was generated from apkCMake_activityClassName.java
and will be placed in the appropriate folder.

You can customize your application id via
* ${apkCMake_applicationIdUrlPart}
* ${apkCMake_applicationIdNamePart}
* ${apkCMake_activityClassName}

For example, if:
* apkCMake_applicationIdUrlPart=com.my_company
* apkCMake_applicationIdNamePart=my_app
* apkCMake_activityClassName=MyApp
then a file MyApp.java will be created into
app/src/main/java/com/my_company/my_app/MyApp.java
*/